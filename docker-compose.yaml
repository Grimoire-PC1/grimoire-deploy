version: '3.8'

services:
  grimoire-backend:
    build:
      context: ./grimoire-backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - grimoire-db
    environment:
      DATABASE_USERNAME: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_URL: ${DATABASE_URL}
      FRONTEND_URL: ${FRONTEND_URL}
      IMAGE_MANAGER_URL: ${IMAGE_MANAGER_URL}

  grimoire-frontend:
    build:
      context: ./grimoire-frontend
      dockerfile: Dockerfile
      args:
        GRIMOIRE_FRONTEND: ${GRIMOIRE_FRONTEND}
    ports:
      - "5173:5173"
    environment:
      VITE_BACKEND_URL: ${BACKEND_URL}

  image-manager:
    build:
      context: ./image-manager
      dockerfile: Dockerfile
    ports:
      - "5000:8081"
    environment:
      DB_URL: ${MONGODB_URL}
      RENDER_URL: ${RENDER_URL}
      BACKEND_URL: ${BACKEND_URL}

  grimoire-db:
    image: postgres
    container_name: postgres-sql
    restart: unless-stopped
    volumes:
      - db:/data/postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /data/postgres
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: json-file
      options:
        max-size: 100m

  nginx:
    image: nginx:stable-alpine
    ports:
      - 80:80
    depends_on:
      - grimoire-frontend
      - grimoire-backend
      - image-manager
      - grimoire-db
    volumes:
      - type: bind
        source: ./nginx/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true

volumes:
  db:
